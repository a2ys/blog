---
import Layout from "../../layouts/Layout.astro";
import BlogCard from "../../components/BlogCard.astro";
import { getEntry, getCollection } from "astro:content";

const { slug } = Astro.params;
if (!slug) throw new Error("Series slug is missing");

const seriesEntry = await getEntry("series", slug);
if (!seriesEntry) throw new Error(`Series not found for slug: ${slug}`);

const allPosts = await getCollection("blog");
const authors = await getCollection("author");

const seriesPosts = allPosts
  .filter((post) => post.data.series && post.data.series.slug === slug)
  .sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  );

const { Content } = await seriesEntry.render();
---

<Layout
  title={`${seriesEntry.data.name} â€¢ Blog Series`}
  description={seriesEntry.data.description}
  ogimage={seriesEntry.data.coverImage}
>
  <div class="py-16 w-[90%] md:w-[80%] xl:w-[70%] mx-auto">
    {
      seriesEntry.data.coverImage && (
        <img
          src={seriesEntry.data.coverImage}
          alt={seriesEntry.data.name}
          class="w-full h-auto rounded-xl mb-10 object-cover"
        />
      )
    }
    <h1 class="text-4xl sm:text-5xl text-center font-black">
      {seriesEntry.data.name}
    </h1>
    <p class="text-lg sm:text-xl text-center mt-4">
      {seriesEntry.data.description}
    </p>
    <div class="post-body mt-6 text-left">
      <Content />
    </div>
    <hr class="border-t-2 border-gray-300 w-1/4 mx-auto mt-12 mb-12" />
    <h2 class="text-2xl font-bold text-center mb-6">Posts in this Series</h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      {
        seriesPosts
          .filter((post) => !post.data.draft)
          .map((post) => {
            const authorData = authors.find(
              (a) => a.slug === post.data.author.slug
            );

            return (
              <BlogCard
                title={post.data.title}
                author={authorData?.data.name || "Unknown Author"}
                authorAvatar={authorData?.data.avatar || ""}
                authorProfileLink={`/author/${authorData?.slug || "#"}`}
                date={post.data.date}
                imageSrc={post.data.thumbnail}
                slug={post.slug}
              />
            );
          })
      }
    </div>
  </div>
</Layout>
